/**
* @author Claire Jaja
* @version 10/30/14
*
* Project Euler
* Problem 2
* Even Fibonacci numbers
*
* Each new term in the Fibonacci sequence is generated by adding
* the previous two terms.
* By startign with 1 and 2, the first 10 terms will be:
* 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
* By considering the terms in the Fibonacci sequence
* whose values do not exceed four million,
* find the sum of the even-valued terms.
*/

object EvenFibonacciNumbers {
  // do not exceed 4 million
  val max = 4000000

  def main(args: Array[String]) {
    // set up first three terms
    var previousPreviousTerm = 1
    var previousTerm = 1
    var currentTerm = 2

    var sum = 0

    while (currentTerm < max) {
      if (currentTerm % 2 == 0) sum += currentTerm
      previousPreviousTerm = previousTerm
      previousTerm = currentTerm
      currentTerm = previousTerm + previousPreviousTerm
    }

    println(sum)
  }
}
