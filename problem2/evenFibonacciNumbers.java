/**
* @author Claire Jaja
* @version 11/24/13
*
* Project Euler
* Problem 2
* Even Fibonacci numbers
*
* Each new term in the Fibonacci sequence is generated by adding the previous two terms.
* By starting with 1 and 2, the first 10 terms will be:
* 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
* By considering the terms in the Fibonacci sequence whose values do not exceed four million,
* find the sum of the even-valued terms.
*/

public class evenFibonacciNumbers
{
	public static void main(String[] args) {
		// set up first three terms
		int previousPreviousTerm = 1;
		int previousTerm = 1;
		int currentTerm = 2;

		// to keep track of my sum
		int sum = 0;

		while (currentTerm < 4000000) { // only values that do not exceed four million
			if (currentTerm % 2 == 0) { // if the current term is even
				sum += currentTerm; // add to sum
				}
			// move on to next term
			previousPreviousTerm = previousTerm;
			previousTerm = currentTerm;
			currentTerm = previousTerm + previousPreviousTerm;
		}

		System.out.println(sum); // print sum
	}

}
